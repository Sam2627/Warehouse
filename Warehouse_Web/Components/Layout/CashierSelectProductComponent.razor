@inject ICategoryUseCase CategoryUseCase
@inject IProductUseCase ProductUseCase

<div class="form-group">
    <label for="category">Category</label>
    <select id="category" class="form-select" @bind="SelectedCategory">
        <option selected></option>
        @foreach (var cat in categories)
        {
            <option value="@cat.CategoryId">@cat.Name</option>
        }
    </select>
</div>
@if(productsInCategory != null)
{
    <table class="table">
        <thead>
            <tr>
                <th>Product Name</th>
                <th>Quantity</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var prod in productsInCategory)
            {
                <tr style=@(prod.ProductId == selectedProductId?"background-color:cornflowerblue; cursor:pointer;":"cursor:pointer")
                    @onclick="@(() => OnSelectProduct(prod))">
                    <td>@prod.Name</td>
                    <td>@prod.Quantity</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {

    private IEnumerable<Product> productsInCategory;

    private int selectedProductId;

    [Parameter]
    public EventCallback<Product> OnProductSelected { get; set; }

    private int selectedCategory;

    private int SelectedCategory { 
        get { return selectedCategory; } 
        set { 
            selectedCategory = value;
            // Call method to get products by category
            productsInCategory = ProductUseCase.GetByCategory(value);
            // Reset selected product to null
            OnSelectProduct(null);
            StateHasChanged();
        } 
    }

    private IEnumerable<Category> categories;

    protected override void OnInitialized()
    {
        base.OnInitialized();

        categories = CategoryUseCase.GetAll();
    }

    private void OnSelectProduct(Product product)
    {
        // Call the event callback to notify the parent component
        OnProductSelected.InvokeAsync(product);
        if (product != null) selectedProductId = product.ProductId;
    }
}
